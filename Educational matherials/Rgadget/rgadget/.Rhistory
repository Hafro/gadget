install.packages('devtools')
install.packages('roxygen2')
install.packages('dplyr')
install.packages('data.table'
)
library(geo)
update.packages(checkBuilt = TRUE,ask = FALSE)
getOption('repos')
options(repos = list(CRAN = "http://cran.hafro.is"))
install.packages("xtable")
source('trunk/stock.R')
source('trunk/function.R')
sim <- gadget.simulate()
source('trunk/gadgetoptions.R')
sim <- gadget.simulate()
sim <- gadget.simulate()
args(suitability)
sim <- gadget.simulate()
source('trunk/function.R')
sim <- gadget.simulate()
source('trunk/function.R')
sim <- gadget.simulate()
sim
str(sim)
library(parallel)
setwd('~/Dropbox/gadget-models/08-tusk/')
fit <- gadget.fit(mat.par = c(-8.6512,0.1403))
source('~/Documents/rgadget/trunk/gadgetFileIO.R')
source('~/Documents/rgadget/trunk/gadgetfunctions.R')
source('~/Documents/rgadget/trunk/gadgetClass.R')
source('~/Documents/rgadget/trunk/gadgetMethods.R')
source('~/Documents/rgadget/trunk/function.R')
library(plyr)
library(dplyr)
library(ggplot2)
library(grid)
fit <- gadget.fit(mat.par = c(-8.6512,0.1403))
source('~/Documents/rgadget/trunk/gadgetfunctions.R')
source('~/Documents/rgadget/trunk/gadgetClass.R')
source('~/Documents/rgadget/trunk/gadgetMethods.R')
source('~/Documents/rgadget/trunk/gadgetFileIO.R')
fit <- gadget.fit(mat.par = c(-8.6512,0.1403))
tmp <- rbind.fill(fit$sidat,
ddply(fit$sidat,~year, summarise,
number.x = sum(number.x*0.00000659*lower^3.01721 ),
predict = sum(predict*0.00000659*lower^3.01721 ),
upper = sum(upper*0.00000659*lower^3.01721 ),
lower = sum(lower*0.00000659*lower^3.01721 ),
lower = 110, lower = 180,
length = 'Biomass'))
si.fit.survey <-
ggplot(tmp, aes(year,number.x)) +
geom_point() +
geom_line(aes(year,predict)) +
geom_linerange(data=subset(tmp,year==max(year)),
aes(year,ymax=number.x,ymin=predict),col='green')+
geom_text(data=mutate(subset(tmp,year==min(year)),y=Inf),
aes(year,y,label=length), vjust = 2,hjust = -1)+
facet_wrap(~length,scale='free_y',ncol=2) + theme_bw() +
ylab('Index') + xlab('Year') +
theme (#axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.margin = unit(0,'cm'), plot.margin = unit(c(0,0,0,0),'cm'),
strip.background = element_blank(), strip.text.x = element_blank())
si.fit.survey
getwd()
library(pander)
?pandoc.table
pandoc.table(data.frame(a=1))
